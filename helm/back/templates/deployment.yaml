apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "back.fullname" . }}
  labels:
    {{- include "back.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "back.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "back.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "back.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.config.server.port }}
              protocol: TCP
          
          envFrom:
            - configMapRef:
                name: {{ include "back.fullname" . }}-config
            - secretRef:
                name: {{ include "back.fullname" . }}-secret
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  {{- if .Values.postgresql.enabled }}
                  name: {{ include "back.fullname" . }}-postgres-pguser-{{ .Values.config.database.user }}
                  key: uri
                  {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if .Values.config.database.ssl.enabled }}
            # SSL Certificate volume mounts
            - name: ssl-certs
              mountPath: /etc/ssl/certs
              readOnly: true
            - name: ssl-private
              mountPath: /etc/ssl/private
              readOnly: true
            {{- end }}
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        {{- if .Values.config.database.ssl.enabled }}
        # SSL Certificate volumes
        - name: ssl-certs
          secret:
            secretName: {{ include "back.fullname" . }}-secret
            items:
            - key: DB_SSL_CA
              path: ca.crt
            - key: DB_SSL_CERT
              path: client.crt
        - name: ssl-private
          secret:
            secretName: {{ include "back.fullname" . }}-secret
            items:
            - key: DB_SSL_KEY
              path: client.key
            defaultMode: 0400
        {{- end }}
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
